MODEL:
  TYPE: generalized_rcnn
  CONV_BODY: FPN.add_aug_fpn_ResNet50_conv5_body #FPN.add_fpn_ResNet50_conv5_body
  NUM_CLASSES: 16
  FASTER_RCNN: True
  MASK_ON: True
NUM_GPUS: 1 #8
SOLVER:
  WEIGHT_DECAY: 0.0001
  LR_POLICY: steps_with_decay
  BASE_LR: 0.0025 #0.02
  GAMMA: 0.1
  MAX_ITER: 180000 # 93000 #85000 #60000 #90000
  STEPS: [0,120000,160000] #[0, 34000, 68000] #[0, 60000, 80000]
  # Equivalent schedules with...
  # 1 GPU:
  #   BASE_LR: 0.0025
  #   MAX_ITER: 60000
  #   STEPS: [0, 30000, 40000]
  # 2 GPUs:
  #   BASE_LR: 0.005
  #   MAX_ITER: 30000
  #   STEPS: [0, 15000, 20000]
  # 4 GPUs:
  #   BASE_LR: 0.01
  #   MAX_ITER: 15000
  #   STEPS: [0, 7500, 10000]
  # 8 GPUs:
  #   BASE_LR: 0.02
  #   MAX_ITER: 7500
  #   STEPS: [0, 3750, 5000]
FPN:
  FPN_ON: True
  MULTILEVEL_ROIS: True
  MULTILEVEL_RPN: True
  RPN_ANCHOR_START_SIZE: 32 #8 # 16
FAST_RCNN:
  ROI_BOX_HEAD: fast_rcnn_heads.add_roi_2mlp_head
  ROI_XFORM_METHOD: RoIAlign
  ROI_XFORM_RESOLUTION: 7
  ROI_XFORM_SAMPLING_RATIO: 2
MRCNN:
  ROI_MASK_HEAD: mask_rcnn_heads.mask_rcnn_fcn_plus_fc_head_v1up4convs #mask_rcnn_heads.mask_rcnn_fcn_head_v1up4convs
  RESOLUTION: 28  # (output mask resolution) default 14
  ROI_XFORM_METHOD: RoIAlign
  ROI_XFORM_RESOLUTION: 14  # default 7
  ROI_XFORM_SAMPLING_RATIO: 2  # default 0
  DILATION: 1  # default 2
  CONV_INIT: MSRAFill  # default GaussianFill
TRAIN:
  #WEIGHTS: '/home/yxzh/mount_31/cxma/software/detectron/pretrained_models/R-50.pkl'
  WEIGHTS: '/home/yxzh/mount_31/cxma/software/detectron/pretrained_models/e2e_mask_R-50_FPN_1x_model_final.pkl'
  DATASETS: ('odai_train',)  #('coco_2014_train', 'coco_2014_valminusminival')
  SCALES: (1024,)
  MAX_SIZE: 1333
  BATCH_SIZE_PER_IM: 256
  RPN_PRE_NMS_TOP_N: 2000  # Per FPN level
  USE_FLIPPED: False # True
  AUTO_RESUME: False
  SNAPSHOT_ITERS: 60000 #34000
  IMS_PER_BATCH: 1
TEST:
  DATASETS: ('odai_val',)
  SCALES: (1024,)
  MAX_SIZE: 1333
  NMS: 0.7 # 0.5
  RPN_PRE_NMS_TOP_N: 1000  # Per FPN level
  RPN_POST_NMS_TOP_N: 1000
  
OUTPUT_DIR: ./tmp/FANet_aug_ohem
